/*
		MEDICAL MODULES
*/

/obj/item/robot_module/medical
	name = "Medical"
	basic_modules = list(
		/obj/item/assembly/flash/cyborg,
		/obj/item/healthanalyzer,
		/obj/item/reagent_containers/borghypo,
		/obj/item/borg/apparatus/beaker,
		/obj/item/reagent_containers/dropper,
		/obj/item/reagent_containers/syringe,
		/obj/item/borg/cyborg_omnitool/medical,
		/obj/item/borg/cyborg_omnitool/medical,
		/obj/item/extinguisher/mini,
		/obj/item/roller/robo,
		/obj/item/borg/cyborghug/medical,
		/obj/item/stack/medical/gauze/cyborg,
		/obj/item/organ_storage,
		/obj/item/borg/lollipop)
	emag_modules = list(/obj/item/reagent_containers/borghypo/hacked)
	cyborg_base_icon = "medical"
	moduleselect_icon = "medical"
	can_be_pushed = FALSE
	hat_offset = 3

/obj/item/robot_module/medical/be_transformed_to(obj/item/robot_module/old_module)
	var/mob/living/silicon/robot/R = loc
	var/static/list/med_icons
	if(!med_icons)
		med_icons = list(
		"Antique" = image(icon = 'icons/mob/robots.dmi', icon_state = "medbot"),
		"Needles" = image(icon = 'icons/mob/robots.dmi', icon_state = "needles"),
		"Default" = image(icon = 'icons/mob/robots.dmi', icon_state = "medical"),
		"Droid" = image(icon = 'icons/mob/robots.dmi', icon_state = "droid-medical"),
		"Marina" = image(icon = 'icons/mob/robots.dmi', icon_state = "marina"),
		"Sleek" = image(icon = 'icons/mob/robots.dmi', icon_state = "sleekmedic"),
		"Kodiak - 'Arachne'" = image(icon = 'icons/mob/robots.dmi', icon_state = "arachne"),
		"Noble" = image(icon = 'icons/mob/robots.dmi', icon_state = "Noble-MED"),
		"R34 - MED6a 'Gibbs'" = image(icon = 'icons/mob/robots.dmi', icon_state = "gibbs"),
		"Qualified Doctor" = image(icon = 'icons/mob/robots.dmi', icon_state = "qualified-doctor"),
		"Meka Medical - F" = image(icon = 'modular_pentest/modules/robots/icons/mob/numekasf.dmi', icon_state = "fmekamed"),
		"Meka Medical - M" = image(icon = 'modular_pentest/modules/robots/icons/mob/numekasm.dmi', icon_state = "mmekamed"),
		)
		med_icons = sortList(med_icons)
	var/med_borg_icon = show_radial_menu(R, R , med_icons, custom_check = CALLBACK(src, PROC_REF(check_menu), R), radius = 42, require_near = TRUE)
	switch(med_borg_icon)
		if("Antique")
			cyborg_base_icon = "medbot"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "medbot"
		if("Needles")
			cyborg_base_icon = "needles"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "needles"
		if("Default")
			cyborg_base_icon = "medical"
		if("Droid")
			cyborg_base_icon = "droid-medical"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "droid-medical"
		if("Marina")
			cyborg_base_icon = "marina"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "marina"
		if("Sleek")
			cyborg_base_icon = "sleekmedic"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "sleekmedic"
		if("Kodiak - 'Arachne'")
			cyborg_base_icon = "arachne"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "arachne"
		if("Noble")
			cyborg_base_icon = "Noble-MED"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "Noble-MED"
		if("R34 - MED6a 'Gibbs'")
			cyborg_base_icon = "gibbs"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "gibbs"
		if("Qualified Doctor")
			cyborg_base_icon = "qualified-doctor"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "qualified-doctor"
		if("Meka Medical - F")
			cyborg_base_icon = "fmekamed"
			cyborg_icon_override = 'modular_pentest/modules/robots/icons/mob/numekasf.dmi'
			special_light_key = "fmekamed"
		if("Meka Medical - M")
			cyborg_base_icon = "mmekamed"
			cyborg_icon_override = 'modular_pentest/modules/robots/icons/mob/numekasm.dmi'
			special_light_key = "mmekamed"
		else
			return FALSE
	return ..()

//
// HYPOSPRAY - BOARD AND UPGRADE CODE
//

/obj/item/borg/upgrade/hypospray
	name = "medical cyborg hypospray advanced synthesiser"
	desc = "An upgrade to the Medical module cyborg's hypospray, allowing it \
		to produce more advanced and complex medical reagents."
	icon_state = "module_medical"
	require_model = TRUE
	model_type = list(/obj/item/robot_module/medical)
	var/list/additional_reagents = list()

/obj/item/borg/upgrade/hypospray/action(mob/living/silicon/robot/borg, user = usr)
	. = ..()
	if(.)
		for(var/obj/item/reagent_containers/borghypo/Hypospray in borg.module.modules)
			if(Hypospray.accepts_reagent_upgrades)
				for(var/hypoaddreagents in additional_reagents)
					Hypospray.add_reagent(hypoaddreagents)

/obj/item/borg/upgrade/hypospray/deactivate(mob/living/silicon/robot/borg, user = usr)
	. = ..()
	if (.)
		for(var/obj/item/reagent_containers/borghypo/Hypospray in borg.module.modules)
			if(Hypospray.accepts_reagent_upgrades)
				for(var/hypoaddreagents in additional_reagents)
					Hypospray.del_reagent(hypoaddreagents)

/obj/item/borg/upgrade/hypospray/expanded
	name = "medical cyborg expanded hypospray"
	desc = "An upgrade to the Medical module's hypospray, allowing it \
		to treat a wider range of conditions and problems."
	additional_reagents = list(/datum/reagent/medicine/mannitol, /datum/reagent/medicine/oculine, /datum/reagent/medicine/inacusiate,
		/datum/reagent/medicine/mutadone, /datum/reagent/medicine/haloperidol, /datum/reagent/medicine/oxandrolone, /datum/reagent/medicine/sal_acid, /datum/reagent/medicine/rezadone,
		/datum/reagent/medicine/pen_acid)

//
// PIERCING HYPOSPRAY - BOARD AND UPGRADE CODE
//

/obj/item/borg/upgrade/piercing_hypospray
	name = "cyborg piercing hypospray"
	desc = "An upgrade to a cyborg's hypospray, allowing it to \
		pierce armor and thick material."
	icon_state = "module_medical"
	model_type = list(/obj/item/robot_module/medical)

/obj/item/borg/upgrade/piercing_hypospray/action(mob/living/silicon/robot/borg, mob/living/user = usr)
	. = ..()
	if(!.)
		return .
	var/found_hypo = FALSE
	for(var/obj/item/reagent_containers/borghypo/hypo in borg.module.modules)
		hypo.bypass_protection = TRUE
		found_hypo = TRUE
	for(var/obj/item/reagent_containers/borghypo/hypo in borg.module.emag_modules)
		hypo.bypass_protection = TRUE
		found_hypo = TRUE

	if(!found_hypo)
		to_chat(user, span_warning("There are no installed hypospray modules to upgrade with piercing!")) //check to see if any hyposprays were upgraded
		return FALSE

/obj/item/borg/upgrade/piercing_hypospray/deactivate(mob/living/silicon/robot/borg, mob/living/user = usr)
	. = ..()
	if(!.)
		return .
	for(var/obj/item/reagent_containers/borghypo/hypo in borg.module.modules)
		hypo.bypass_protection = initial(hypo.bypass_protection)
	for(var/obj/item/reagent_containers/borghypo/hypo in borg.module.emag_modules)
		hypo.bypass_protection = initial(hypo.bypass_protection)

//
// DEFIBRILLATOR - BOARD AND UPGRADE CODE
//

/obj/item/borg/upgrade/defib
	name = "medical cyborg defibrillator"
	desc = "An upgrade to the Medical module, installing a built-in \
		defibrillator, for on the scene revival."
	icon_state = "module_medical"
	require_model = TRUE
	model_type = list(/obj/item/robot_module/medical)
	var/backpack = FALSE //True if we get the defib from a physical backpack unit rather than an upgrade card, so that we can return that upon deactivate()

/obj/item/borg/upgrade/defib/backpack
	backpack = TRUE

/obj/item/borg/upgrade/defib/action(mob/living/silicon/robot/borg, user = usr)
	. = ..()
	if(.)
		var/obj/item/borg/upgrade/defib/backpack/defib_backpack = locate() in borg //If a full defib unit was used to upgrade prior, we can just pop it out now and replace
		if(defib_backpack)
			defib_backpack.deactivate(borg, user)
			to_chat(user, span_notice("You remove the defibrillator unit to make room for the compact upgrade."))
		var/obj/item/shockpaddles/cyborg/defibulator = new(borg.module)
		borg.module.basic_modules += defibulator
		borg.module.add_module(defibulator, FALSE, TRUE)

/obj/item/borg/upgrade/defib/deactivate(mob/living/silicon/robot/borg, user = usr)
	. = ..()
	if (.)
		var/obj/item/shockpaddles/cyborg/defibulator = locate() in borg.module
		borg.module.remove_module(defibulator, TRUE)
		if(backpack)
			new /obj/item/defibrillator(get_turf(borg))
			qdel(src)

//
// SURGICAL PROCESSOR - BOARD AND UPGRADE CODE
//

/obj/item/borg/upgrade/processor
	name = "medical cyborg surgical processor"
	desc = "An upgrade to the Medical model, installing a processor \
		capable of scanning surgery disks and carrying \
		out procedures"
	icon_state = "module_medical"
	require_model = TRUE
	model_type = list(/obj/item/robot_module/medical, /obj/item/robot_module/syndicate_medical)

	items_to_add = list(/obj/item/surgical_processor)

//
// CREW PINPOINTER - BOARD AND UPGRADE CODE
//

/obj/item/borg/upgrade/pinpointer
	name = "medical cyborg crew pinpointer"
	desc = "A crew pinpointer module for the medical cyborg. Permits remote access to the crew monitor."
	icon_state = "module_medical"
	require_model = TRUE
	model_type = list(/obj/item/robot_module/medical, /obj/item/robot_module/syndicate_medical)

	items_to_add = list(/obj/item/pinpointer/crew)
	var/datum/action/crew_monitor

/obj/item/borg/upgrade/pinpointer/action(mob/living/silicon/robot/borg, mob/living/user = usr)
	. = ..()
	if(!.)
		return .
	crew_monitor = new /datum/action/item_action/crew_monitor(src)
	crew_monitor.Grant(borg)
	icon_state = "scanner"

/obj/item/borg/upgrade/pinpointer/deactivate(mob/living/silicon/robot/borg, mob/living/user = usr)
	. = ..()
	if(!.)
		return .
	icon_state = "pinpointer_crew"
	crew_monitor.Remove(borg)
	QDEL_NULL(crew_monitor)

/obj/item/borg/upgrade/pinpointer/ui_action_click()
	if(..())
		return
	var/mob/living/silicon/robot/borg = usr
	GLOB.crewmonitor.show(borg,borg)

//
// ADDITIONAL BEAKER STORAGE APPARATUS - BOARD AND UPGRADE CODE
//

/obj/item/borg/upgrade/beaker_app
	name = "beaker storage apparatus"
	desc = "A supplementary beaker storage apparatus for medical cyborgs."
	icon_state = "module_medical"
	require_model = TRUE
	model_type = list(/obj/item/robot_module/medical, /obj/item/robot_module/syndicate_medical)

	items_to_add = list(/obj/item/borg/apparatus/beaker/extra)

//
// ADVANCED MEDICAL SCANNER - BOARD AND UPGRADE CODE
//

/obj/item/borg/upgrade/advmedscan
	name = "Advanced Medical Scanner"
	desc = "An upgrade for Medical Cyborgs to upgrade their medical scanner"
	icon_state = "module_medical"
	require_model = TRUE //TRUE to limit to select modules, FALSE if all borgs get.
	model_type = list(/obj/item/robot_module/medical, /obj/item/robot_module/syndicate_medical)

	items_to_add = list(/obj/item/healthanalyzer/advanced)
	items_to_remove = list(/obj/item/healthanalyzer)

//
// ADVANCED MEDICAL SCANNER BOARD DESIGN - mechfabricator_designs.dm
//

/datum/design/borg_upgrade_advancedmedscan
	name = "Advanced Medical Scanner"
	id = "borg_upgrade_advancedmedscan"
	build_type = MECHFAB
	build_path = /obj/item/borg/upgrade/advmedscan
	materials = list(
		/datum/material/iron = 5000,
		/datum/material/glass = 2500,
		/datum/material/silver = 2000,
		/datum/material/gold = 1500
	)
	construction_time = 60
	category = list("Cyborg Upgrade Modules")
