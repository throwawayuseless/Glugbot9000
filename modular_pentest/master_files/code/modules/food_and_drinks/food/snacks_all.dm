//
// snacks_burgers.dm
//

/obj/item/reagent_containers/food/snacks/burger/plain
	desc = "A Terran culinary cornerstone: a beef patty between a sliced bun or roll, with additional condiments and ingredients included between them."

/obj/item/reagent_containers/food/snacks/burger/baconburger
	desc = "A commonly observed variation of the Terran hamburger. The cuts of bacon add a pleasant crunch."

/obj/item/reagent_containers/food/snacks/burger/fish
	desc = "A breaded and fried square of fish, usually with tartar sauce and cheese kept between a sliced, steamed bun."


//
// snacks_egg.dm
//


//
// snacks_frozen.dm
//

/obj/item/reagent_containers/food/snacks/snowcones/spacemountainwind
	name = "Space Mountain Wind snowcone"
	desc = "Space Mountain Wind drizzled over a snowball in a paper cup."
	list_reagents = list(/datum/reagent/consumable/nutriment = 1, /datum/reagent/consumable/spacemountainwind = 5)

/obj/item/reagent_containers/food/snacks/snowcones/pwrgame
	name = "pwrgame snowcone"
	desc = "Pwrgame soda drizzled over a snowball in a paper cup."
	list_reagents = list(/datum/reagent/consumable/nutriment = 1, /datum/reagent/consumable/pwr_game = 5)

//
// snacks_meat.dm
//

/obj/item/reagent_containers/food/snacks/cornedbeef
	filling_color = "D43131"

/obj/item/reagent_containers/food/snacks/bearsteak
	filling_color = "#B22222"

/obj/item/reagent_containers/food/snacks/rawkhinkali
	filling_color = "#F0F0F0"

/obj/item/reagent_containers/food/snacks/nugget
	filling_color = "#E6B857"

/obj/item/reagent_containers/food/snacks/bbqribs
	filling_color = "#662008"

/obj/item/reagent_containers/food/snacks/meatclown
	filling_color = "#CD4122"

/obj/item/reagent_containers/food/snacks/kebab
	filling_color = "#9C4814"

/obj/item/reagent_containers/food/snacks/fishmeat/donkfish
	desc = "A fillet of the proprietary organism and affront to Terran ethical genetic experimentation known as the \"donkfish\". The interior mass is a mess of chaotic meat and cancerous growths, with semi-formed organs and teratomas giving it a dire texture."

/obj/item/reagent_containers/food/snacks/fishmeat/carp
	desc = "A fillet of space carp meat. It's not suitable for consumption raw, due to their unique biology of bearing an unsafe chemical within its body."

/obj/item/reagent_containers/food/snacks/fishandchips
	name = "fish and chips"
	desc = "Battered, fried fish alongside a side of potato chips."

/obj/item/reagent_containers/food/snacks/vegetariansushiroll
	desc = "A sushi roll consisting of rice, carrots, and potatoes wrapped in seaweed. A techncial sibling to the sushi roll, but the origins of the name are unknown. Can be sliced into individual servings."


/obj/item/reagent_containers/food/snacks/fishi
	desc = "A form of temaki roll originating from Zohil, which consists of a whole, specially prepared fish that is wrapped in seaweed."

/obj/item/reagent_containers/food/snacks/nigiri_sushi
	desc = "A form of sushi, consisting of a hand-shaped rice mound with a topping of choice, bound with a band of seaweed. This one appears to have been topped with raw fish."

/obj/item/reagent_containers/food/snacks/rawkhinkali
	desc = "One of the many Terran dumplings. This one is in the shape of a twisted knob, filled with meat, vegetables, and garlic. This one needs to be boiled."

/obj/item/reagent_containers/food/snacks/khinkali
	desc = "One of the many Terran dumplings. This one is in the shape of a twisted knob, filled with meat, vegetables, and garlic."

/obj/item/reagent_containers/food/snacks/sashimi
	desc = "Carefully prepared, thinly cut fish."

/obj/item/reagent_containers/food/snacks/candy_corn
	desc = "A singular candy corn, originating as a Terran tradition."

/obj/item/reagent_containers/food/snacks/chocoorange
	desc = "A traditional Terran confectionary consisting of orange-infused chocolate, made in the mimicry of the orange fruit."

/obj/item/reagent_containers/food/snacks/tinychocolate
	desc = "A small, sweet chocolate." // No where in the spawner box does this claim milk. This is dairy free in every aspect I could find.

//
// snacks_other.dm
//

/obj/item/reagent_containers/food/snacks/hugemushroomslice
	filling_color = "#876736"

/obj/item/reagent_containers/food/snacks/stuffedlegion
	filling_color = "#3B342B"

/obj/item/reagent_containers/food/snacks/powercrepe
	filling_color = "#D1AE82"

/obj/item/reagent_containers/food/snacks/branrequests
	filling_color = "#D1AE82"

/obj/item/reagent_containers/food/snacks/tatortot
	name = "tator tot"
	desc = "A large fried potato nugget that may or may not try to valid you."
	icon_state = "tatortot"
	list_reagents = list(/datum/reagent/consumable/nutriment = 4)
	filling_color = "FFD700"
	tastes = list("potato" = 3, "valids" = 1)
	foodtype = FRIED | VEGETABLES

/obj/item/reagent_containers/food/snacks/tatortot/Initialize()
	. = ..()
	AddElement(/datum/element/dunkable, 10)

//
// snacks_pastry.dm
//

/obj/item/reagent_containers/food/snacks/plumphelmetbiscuit
	name = "plump helmet biscuit"
	desc = "This is a finely-prepared plump helmet biscuit. The ingredients are exceptionally minced plump helmet, and well-minced wheat flour."
	icon_state = "phelmbiscuit"
	bonus_reagents = list(/datum/reagent/consumable/nutriment = 1, /datum/reagent/consumable/nutriment/vitamin = 1)
	list_reagents = list(/datum/reagent/consumable/nutriment = 5)
	filling_color = "#F0E68C"
	tastes = list("mushroom" = 1, "biscuit" = 1)
	foodtype = GRAIN | VEGETABLES
	/*food_flags = FOOD_FINGER_FOOD*/
	w_class = WEIGHT_CLASS_SMALL

/obj/item/reagent_containers/food/snacks/plumphelmetbiscuit/Initialize()
	var/fey = prob(10)
	if(fey)
		name = "exceptional plump helmet biscuit"
		desc = "Microwave is taken by a fey mood! It has cooked an exceptional plump helmet biscuit!"
		bonus_reagents = list(/datum/reagent/medicine/omnizine = 5, /datum/reagent/consumable/nutriment = 1, /datum/reagent/consumable/nutriment/vitamin = 1)
	. = ..()
	if(fey)
		reagents.add_reagent(/datum/reagent/medicine/omnizine, 5)

//
// snacks_pie.dm
//

/obj/item/reagent_containers/food/snacks/pie/applepie
	desc = "A pie consisting of sweetened, baked apples and cinnamon. A hallmark of desserts."

//
// snacks_pizza.dm
//

/obj/item/reagent_containers/food/snacks/pizzaslice/dank
	desc = "A slice of cheese pizza that's been topped with ambrosia vulgaris, some swear by its medicinal (and psychogenic) effects as a topping."

/obj/item/reagent_containers/food/snacks/pizza/arnold
	name = "\improper Arnold pizza"
	desc = "Hello, you've reached Arnold's pizza shop. I'm not here now, I'm out killing pepperoni."
	icon_state = "arnoldpizza"
	slice_path = /obj/item/reagent_containers/food/snacks/pizzaslice/arnold
	bonus_reagents = list(/datum/reagent/consumable/nutriment = 30, /datum/reagent/consumable/nutriment/vitamin = 6, /datum/reagent/iron = 10, /datum/reagent/medicine/omnizine = 30)
	tastes = list("crust" = 1, "tomato" = 1, "cheese" = 1, "pepperoni" = 2, "9 millimeter bullets" = 2)

/obj/item/reagent_containers/food/snacks/proc/try_break_off(mob/living/M, mob/living/user) //maybe i give you a pizza maybe i break off your arm
	var/obj/item/bodypart/l_arm = user.get_bodypart(BODY_ZONE_L_ARM)
	var/obj/item/bodypart/r_arm = user.get_bodypart(BODY_ZONE_R_ARM)
	if(prob(50) && iscarbon(user) && M == user && (r_arm || l_arm))
		user.visible_message(span_notice("\The [src] breaks off [user]'s arm!!"), span_notice("\The [src] breaks off your arm!"))
		if(l_arm)
			l_arm.dismember()
		else
			r_arm.dismember()
		playsound(user, "desceration" ,50, TRUE, -1)

/obj/item/reagent_containers/food/snacks/proc/i_kill_you(obj/item/I, mob/user)
	if(istype(I, /obj/item/reagent_containers/food/snacks/pineappleslice))
		to_chat(user, "<font color='red' size='7'>If you want something crazy like pineapple, I kill you.</font>")
		user.gib() //if you want something crazy like pineapple, i kill you

/obj/item/reagent_containers/food/snacks/pizza/arnold/attack(mob/living/M, mob/living/user)
	. = ..()
	try_break_off(M, user)

/obj/item/reagent_containers/food/snacks/pizza/arnold/attackby(obj/item/I, mob/user)
	i_kill_you(I, user)
	. = ..()

/obj/item/reagent_containers/food/snacks/pizzaslice/arnold
	name = "\improper Arnold pizza slice"
	desc = "I come over, maybe I give you a pizza, maybe I break off your arm."
	icon_state = "arnoldpizzaslice"
	filling_color = "#A52A2A"
	tastes = list("crust" = 1, "tomato" = 1, "cheese" = 1, "pepperoni" = 2, "9 millimeter bullets" = 2)
	foodtype = GRAIN | VEGETABLES | DAIRY | MEAT

/obj/item/reagent_containers/food/snacks/pizzaslice/arnold/attack(mob/living/M, mob/living/user)
	. =..()
	try_break_off(M, user)

/obj/item/reagent_containers/food/snacks/pizzaslice/arnold/attackby(obj/item/I, mob/user)
	i_kill_you(I, user)
	. = ..()

//
// snacks_sandwichtoast.dm
//

/obj/item/reagent_containers/food/snacks/grilledcheese
	desc = "A sandwich consisting of cheese between two slices of bread. Commonly grilled in a pan."

//
// snacks_soup.dm
//

/obj/item/reagent_containers/food/snacks/soup/clownchili
	name = "chili con carnival"
	desc = "A delicious stew of meat, chiles, and salty, salty clown tears."
	icon_state = "clownchili"
	bonus_reagents = list(/datum/reagent/consumable/nutriment = 1, /datum/reagent/consumable/tomatojuice = 2, /datum/reagent/consumable/nutriment/vitamin = 2, /datum/reagent/consumable/laughter = 1)
	list_reagents = list(/datum/reagent/consumable/nutriment = 5, /datum/reagent/consumable/capsaicin = 1, /datum/reagent/consumable/tomatojuice = 2, /datum/reagent/consumable/nutriment/vitamin = 2, /datum/reagent/consumable/banana = 1)
	tastes = list("tomato" = 1, "hot peppers" = 2, "clown feet" = 2, "kind of funny" = 2, "someone's parents" = 2)
	foodtype = VEGETABLES | MEAT
